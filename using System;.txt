 using System;  

    public class OzelDizi // Sınıf Türkçe  
    {  
        // İç dizi ve eleman sayısını tutan alanlar  
        private object[] _elemanlar; // İç dizi (Türkçe isim)  
        private int _elemanSayisi;   // Dizi içindeki eleman sayısını tutar  

        // Varsayılan başlangıç kapasitesi  
        private const int VarsayilanKapasite = 4;  

        // Constructor: Başlangıç dizisini oluşturur  
        public OzelDizi()  
        {  
            _elemanlar = new object[VarsayilanKapasite];  
            _elemanSayisi = 0;  
        }  

        // Count: Liste içerisindeki toplam eleman sayısını döndürür  
        public int Count  
        {  
            get { return _elemanSayisi; }  
        }  

        // Add: Listeye yeni bir eleman ekler  
        public void Add(object item)  
        {  
            KapasiteyiKontrolEt(); // Kapasite kontrolü yapılıyor  
            _elemanlar[_elemanSayisi] = item; // Elemanı sona ekle  
            _elemanSayisi++;  
        }  

        // Insert: Belirtilen indekse eleman ekler  
        public void Insert(int index, object item)  
        {  
            if (index < 0 || index > _elemanSayisi)  
                throw new ArgumentOutOfRangeException(nameof(index), "Index geçersiz!");  

            KapasiteyiKontrolEt(); // Eğer kapasite yetmiyorsa artır  
            for (int i = _elemanSayisi; i > index; i--)  
            {  
                _elemanlar[i] = _elemanlar[i - 1]; // Elemanları sağa kaydır  
            }  
            _elemanlar[index] = item; // Yeni elemanı yerine yerleştir  
            _elemanSayisi++;  
        }  

        // RemoveAt: Belirtilen indeksteki elemanı siler  
        public void RemoveAt(int index)  
        {  
            if (index < 0 || index >= _elemanSayisi)  
                throw new ArgumentOutOfRangeException(nameof(index), "Index geçersiz!");  

            for (int i = index; i < _elemanSayisi - 1; i++)  
            {  
                _elemanlar[i] = _elemanlar[i + 1]; // Elemanları sola kaydır  
            }  
            _elemanlar[_elemanSayisi - 1] = null; // Son elemanı sıfırla  
            _elemanSayisi--;  
        }  

        // Get: Belirtilen indeksteki elemanı döndürür  
        public object Get(int index)  
        {  
            if (index < 0 || index >= _elemanSayisi)  
                throw new ArgumentOutOfRangeException(nameof(index), "Index geçersiz!");  

            return _elemanlar[index];  
        }  

        // ToString: Listedeki elemanları virgülle ayrılmış şekilde string döndürür  
        public override string ToString()  
        {  
            if (_elemanSayisi == 0) return string.Empty;  

            string sonuc = string.Empty;  
            for (int i = 0; i < _elemanSayisi; i++)  
            {  
                sonuc += _elemanlar[i]?.ToString(); // Null kontrolü yapılır  
                if (i < _elemanSayisi - 1)  
                {  
                    sonuc += ", ";  
                }  
            }  
            return sonuc;  
        }  

        // Kapasiteyi kontrol eder ve gerekirse kapasiteyi artırır  
        private void KapasiteyiKontrolEt()  
        {  
            if (_elemanSayisi == _elemanlar.Length) // Eğer kapasite doluysa  
            {  
                int yeniKapasite = _elemanlar.Length * 2; // Kapasiteyi iki katına çıkar  
                object[] yeniDizi = new object[yeniKapasite];  
                Array.Copy(_elemanlar, yeniDizi, _elemanSayisi); // Mevcut elemanları yeni diziye kopyala  
                _elemanlar = yeniDizi; // Eski diziyi yeniyle değiştir  
            }  
        }  
    }  

    // Test için örnek kullanım  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            // OzelDizi sınıfını oluştur  
            OzelDizi liste = new OzelDizi();  

            // Add metodu ile eleman ekleme  
            liste.Add("Elma");  
            liste.Add("Armut");  
            liste.Add("Kiraz");  
            liste.Add("Karpuz");  
            liste.Add("Muz"); // Kapasite burada artacak  

            Console.WriteLine($"Liste: {liste}"); // Elma, Armut, Kiraz, Karpuz, Muz  

            // Insert metodu ile araya eleman ekleme  
            liste.Insert(2, "Portakal");  
            Console.WriteLine($"2. indekse Portakal eklendi: {liste}"); // Elma, Armut, Portakal, Kiraz, Karpuz, Muz  

            // RemoveAt metodu ile silme işlemi  
            liste.RemoveAt(3);  
            Console.WriteLine($"3. indeksteki eleman silindi: {liste}"); // Elma, Armut, Portakal, Karpuz, Muz  

            // Get metodu ile eleman getir  
            Console.WriteLine($"0. indeksteki eleman: {liste.Get(0)}"); // Elma  

            // Count ile toplam eleman sayısını al  
            Console.WriteLine($"Listedeki toplam eleman sayısı: {liste.Count}"); // 5  
        }  
    }  